#!/usr/bin/env python3

import numpy as np
import rospy
from sensor_msgs.msg import JointState
from noodlebot.msg import swimmer_reset
from std_msgs.msg import Empty

class DummmySwimmer(object):
    def __init__(self): 

        self.current_joint_pose = np.zeros(2)
        self.current_joint_vel = np.zeros(2)
        self.pause = False

        rospy.init_node('FakeSwimmer')

        ### TBR ###
        self.move_reset = rospy.Publisher('/servo_reset',swimmer_reset,queue_size=1,latch=True)
        rospy.Subscriber('/joint_states',JointState,self.callback,queue_size=1)
        rospy.Subscriber('/pause',Empty,self.PauseCallback,queue_size=1)
        rospy.Subscriber('/resume',Empty,self.ResumeCallback,queue_size=1)

    def PauseCallback(self,msg):
        self.pause = True 

    def ResumeCallback(self,msg):
        self.pause = False 
        
    def callback(self,msg): 
        if not self.pause:
            joints = np.array(msg.position)*180./np.pi
            self.move_reset.publish(swimmer_reset(0.2,-80,80,*joints.astype(int)))


if __name__== '__main__':
    test = DummmySwimmer()
    print('Dummy swimmer is running')
    rospy.spin()
